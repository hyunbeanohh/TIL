
/* 튜플 */

/**
 * 튜플은 배열과 비슷하지만, 타입과 길이가 고정된 배열을 표현할 때 사용한다.
 * 튜플은 타입스크립트의 타입 시스템과 대괄호를 사용해서 선언할 수 있다.
 * 대괄호 안에 타입시스템을 기술하는 것이 배열 타입과 유일하게 다른 점이다.
 * 대괄호 안에 선언하는 타입의 개수가 튜플이 가질 수 있는 원소의 개수를 나타낸다.
 * 즉, 튜플은 배열의 특정 인덱스에 정해진 타입을 선언하는 것과 같다.
 */

let tuple : [number] = [1];
tuple = [1,2]; // 불가능
tuple = [1]; // 가능

let tuple : [number,string,boolean] = [1,"hello",true]; //여러 타입과 혼합도 가능하다.

/**
 * 기본적으로 타입스크립트에서의 배열과 튜플은 자바스크립트와 달리 제한적으로 쓰인다.
 * 배열은 사전에 허용하지 않은 타입이 서로 섞이는 것을 방지하여 타입 안정성을 제공한다.
 * 튜플은 길이까지 제한하여 원소 개수와 타입을 보장한다.
 * 이러한 특징으로 인해 타입스크립트는 배열과 튜플을 사용하여 정적 타입을 보장하고, 코드의 안정성을 높이는 데 사용한다.
 * 특히 튜플의 경우 컨벤션을 잘 지키고 각 배열 원소의 명확한 의미와 쓰임을 보장할 때 더욱 안전하게 사용할 수 있는 타입이다.
 * 
 * 리액트의 hook 요소 중 useState는 튜플을 사용하여 상태값과 상태값을 변경하는 함수를 반환한다.
 * 첫번째 원소는 훅으로부터 생성 및 관리되는 상태 값을 의미하고, 두번째 원소는 해당 상태를 조작할 수 있는 세터(setter)를 의미한다.
 */